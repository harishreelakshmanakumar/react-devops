pipeline {
    agent any

    environment {
        BACKEND_IMAGE_NAME  = "inventory-management-backend"
        FRONTEND_IMAGE_NAME = "inventory-management-frontend"
        IMAGE_TAG           = "latest"
        DOCKER_REGISTRY     = "docker.io"
        DOCKER_REPO         = "harishree11"
        KUBECONFIG = "/var/lib/jenkins/.kube/config"
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    git branch: 'main', url: 'https://github.com/harishreelakshmanakumar/react-devops.git'
                }
            }
        }

        stage('Build Backend Image') {
            steps {
                script {
                    dockerImageBackend = docker.build("${DOCKER_REPO}/${BACKEND_IMAGE_NAME}:${IMAGE_TAG}", "./React-Inventory-Management-System-main/Backend")
                }
            }
        }

        stage('Build Frontend Image') {
            steps {
                script {
                    dockerImageFrontend = docker.build("${DOCKER_REPO}/${FRONTEND_IMAGE_NAME}:${IMAGE_TAG}", "./React-Inventory-Management-System-main/Frontend")
                }
            }
        }

        stage('Push Docker Images') {
            steps {
                script {
                    sh 'docker login -u harishree11 -p "Hari@1104"'
                    dockerImageBackend.push("${IMAGE_TAG}")
                    dockerImageFrontend.push("${IMAGE_TAG}")
                }
            }
        }

stage('Fix Minikube Permissions') {
    steps {
        script {
            sh '''
                set -e

                echo "Preparing Minikube files for Jenkins..."

                sudo mkdir -p /var/lib/jenkins/.minikube/profiles/minikube

                # Copy only known required files (if they exist)
                if [ -f /home/hari/.minikube/ca.crt ]; then
                    sudo cp /home/hari/.minikube/ca.crt /var/lib/jenkins/.minikube/
                fi

                if [ -f /home/hari/.minikube/profiles/minikube/client.crt ]; then
                    sudo cp /home/hari/.minikube/profiles/minikube/client.crt /var/lib/jenkins/.minikube/profiles/minikube/
                fi

                if [ -f /home/hari/.minikube/profiles/minikube/client.key ]; then
                    sudo cp /home/hari/.minikube/profiles/minikube/client.key /var/lib/jenkins/.minikube/profiles/minikube/
                fi

                if [ -f /home/hari/.minikube/profiles/minikube/config.json ]; then
                    sudo cp /home/hari/.minikube/profiles/minikube/config.json /var/lib/jenkins/.minikube/profiles/minikube/
                fi

                # Fix ownership
                sudo chown -R jenkins:jenkins /var/lib/jenkins/.minikube

                # Setup .kube/config for Jenkins
                sudo mkdir -p /var/lib/jenkins/.kube
                sudo cp /home/hari/.kube/config /var/lib/jenkins/.kube/config
                sudo sed -i 's|/home/hari/.minikube|/var/lib/jenkins/.minikube|g' /var/lib/jenkins/.kube/config
                sudo chown -R jenkins:jenkins /var/lib/jenkins/.kube

                echo "Minikube permission setup completed."
            '''
        }
    }
}


        stage('Deploy to Minikube') {
            steps {
                script {
                    sh 'kubectl apply -f deploy.yaml --kubeconfig=/var/lib/jenkins/.kube/config --validate=false'
                }
            }
        }
    }

    post {
        always {
            echo "Pipeline execution completed."
        }
    }
}
